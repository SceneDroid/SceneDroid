<?xml version="1.0" encoding="UTF-8"?>

<root>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <methodtrace value="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: h1.o i(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.p: h1.o i(android.app.Activity)&gt;,h1.o i(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: h1.o i(android.app.Activity)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.o">
    <FragmentSummary>
      <method value="&lt;h1.o: void h(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.o: void h(android.app.Activity)&gt;,void h(android.app.Activity), &lt;h1.p: h1.o i(android.app.Activity)&gt;"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void h(android.app.Activity)&gt;"/>
        <node method="p i" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p i" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.o: void h(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.o: void h(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void h(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.o">
    <FragmentSummary>
      <method value="&lt;h1.o: void j(android.app.Fragment)&gt;"/>
      <methodtrace value="&lt;h1.o: void j(android.app.Fragment)&gt;,&lt;h1.p: h1.o i(android.app.Activity)&gt;,h1.o i(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void j(android.app.Fragment)&gt;"/>
        <node method="&lt;h1.p: h1.o i(android.app.Activity)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.o: void j(android.app.Fragment)&gt;"/>
      <methodtrace value="&lt;h1.o: void j(android.app.Fragment)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void j(android.app.Fragment)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
      <methodtrace value="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;,boolean o(android.app.FragmentManager,boolean)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
        <node method="p o" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p o" type="beginTransaction" unit="$r11 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p o" type="addFunction" unit="$r11 = virtualinvoke $r11.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r4, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p o" type="commit" unit="virtualinvoke $r11.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
      <methodtrace value="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;,boolean o(android.app.FragmentManager,boolean)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
        <node method="p o" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p o" type="beginTransaction" unit="$r11 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p o" type="addFunction" unit="$r11 = virtualinvoke $r11.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r4, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p o" type="commit" unit="virtualinvoke $r11.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;"/>
      <methodtrace value="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;,boolean handleMessage(android.os.Message), &lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;"/>
        <node method="p o" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p o" type="beginTransaction" unit="$r11 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p o" type="addFunction" unit="$r11 = virtualinvoke $r11.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r4, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p o" type="commit" unit="virtualinvoke $r11.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;"/>
      <methodtrace value="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;,boolean handleMessage(android.os.Message), &lt;h1.p: boolean o(android.app.FragmentManager,boolean)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: boolean handleMessage(android.os.Message)&gt;"/>
        <node method="p o" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p o" type="beginTransaction" unit="$r11 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p o" type="addFunction" unit="$r11 = virtualinvoke $r11.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r4, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p o" type="commit" unit="virtualinvoke $r11.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.b">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.bumptech.glide.b"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.bumptech.glide.b"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.n1">
    <FragmentSummary>
      <method value="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <methodtrace value="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.n1"/>
      <nodes>
        <node method="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <methodtrace value="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.n1"/>
      <nodes>
        <node method="&lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.f">
    <FragmentSummary>
      <method value="&lt;u2.f: void run()&gt;"/>
      <methodtrace value="&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.f"/>
      <nodes>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.f: void run()&gt;"/>
      <methodtrace value="&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.f"/>
      <nodes>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.f: void run()&gt;"/>
      <methodtrace value="&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.f"/>
      <nodes>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.c">
    <FragmentSummary>
      <method value="&lt;u2.c: void run()&gt;"/>
      <methodtrace value="&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.c"/>
      <nodes>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.c: void run()&gt;"/>
      <methodtrace value="&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.c"/>
      <nodes>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.c: void run()&gt;"/>
      <methodtrace value="&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.c"/>
      <nodes>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="androidx.lifecycle.w">
    <FragmentSummary>
      <method value="&lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;,void g(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;"/>
      <source name="androidx.lifecycle.w"/>
      <nodes>
        <node method="&lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="androidx.core.app.f">
    <FragmentSummary>
      <method value="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.core.app.f"/>
      <nodes>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="androidx.activity.ComponentActivity">
    <FragmentSummary>
      <method value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.activity.ComponentActivity"/>
      <nodes>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.activity.ComponentActivity"/>
      <nodes>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.activity.ComponentActivity"/>
      <nodes>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.o">
    <FragmentSummary>
      <method value="&lt;h1.o: void onAttach(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.o: void onAttach(android.app.Activity)&gt;,&lt;h1.p: h1.o i(android.app.Activity)&gt;,h1.o i(android.app.Activity), &lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;, &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void onAttach(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o i(android.app.Activity)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.o: void onAttach(android.app.Activity)&gt;"/>
      <methodtrace value="&lt;h1.o: void onAttach(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.o"/>
      <nodes>
        <node method="&lt;h1.o: void onAttach(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.q">
    <FragmentSummary>
      <method value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void N()&gt;"/>
      <methodtrace value="&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void N()&gt;"/>
      <methodtrace value="&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void N()&gt;"/>
      <methodtrace value="&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.y">
    <FragmentSummary>
      <method value="&lt;t2.y: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.y"/>
      <nodes>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.y: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.y"/>
      <nodes>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.y: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.y"/>
      <nodes>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
      <methodtrace value="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="c3.c">
    <FragmentSummary>
      <method value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="c3.c">
    <FragmentSummary>
      <method value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="c3.a">
    <FragmentSummary>
      <method value="&lt;c3.a: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="c3.a"/>
      <nodes>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.a: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="c3.a"/>
      <nodes>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.a: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="c3.a"/>
      <nodes>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="c3.c">
    <FragmentSummary>
      <method value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
      <methodtrace value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
      <methodtrace value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
      <methodtrace value="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="c3.c"/>
      <nodes>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.e">
    <FragmentSummary>
      <method value="&lt;u2.e: void run()&gt;"/>
      <methodtrace value="&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.e"/>
      <nodes>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.e: void run()&gt;"/>
      <methodtrace value="&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.e"/>
      <nodes>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.e: void run()&gt;"/>
      <methodtrace value="&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.e"/>
      <nodes>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void p(t2.c0)&gt;"/>
      <methodtrace value="&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void p(t2.c0)&gt;"/>
      <methodtrace value="&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void p(t2.c0)&gt;"/>
      <methodtrace value="&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.q">
    <FragmentSummary>
      <method value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.q">
    <FragmentSummary>
      <method value="&lt;r2.q: void b0(s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: void b0(s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: void b0(s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
      <methodtrace value="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$g$a">
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.e1">
    <FragmentSummary>
      <method value="&lt;t2.e1: void q()&gt;"/>
      <methodtrace value="&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void q()&gt;"/>
      <methodtrace value="&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void q()&gt;"/>
      <methodtrace value="&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.e1">
    <FragmentSummary>
      <method value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.e1">
    <FragmentSummary>
      <method value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$g$a">
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.d0">
    <FragmentSummary>
      <method value="&lt;t2.d0: void run()&gt;"/>
      <methodtrace value="&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.d0"/>
      <nodes>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.d0: void run()&gt;"/>
      <methodtrace value="&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.d0"/>
      <nodes>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.d0: void run()&gt;"/>
      <methodtrace value="&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.d0"/>
      <nodes>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$b">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$b">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$b: void a(boolean)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$f">
    <FragmentSummary>
      <method value="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$f">
    <FragmentSummary>
      <method value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$f: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$f: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$f: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="androidx.fragment.app.e">
    <FragmentSummary>
      <method value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.fragment.app.e"/>
      <nodes>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.fragment.app.e"/>
      <nodes>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="androidx.fragment.app.e"/>
      <nodes>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.q">
    <FragmentSummary>
      <method value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.SettingsActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.SettingsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.SettingsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.SettingsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.SettingsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$h">
    <FragmentSummary>
      <method value="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$h">
    <FragmentSummary>
      <method value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$h: void a(java.lang.Object)&gt;,&lt;t2.c0: void p(t2.c0)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$h: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$h: void a(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0: void p(t2.c0)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.b">
    <FragmentSummary>
      <method value="&lt;u2.b: void run()&gt;"/>
      <methodtrace value="&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.b"/>
      <nodes>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.b: void run()&gt;"/>
      <methodtrace value="&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.b"/>
      <nodes>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.b: void run()&gt;"/>
      <methodtrace value="&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.b"/>
      <nodes>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="u2.g">
    <FragmentSummary>
      <method value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
      <methodtrace value="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="u2.g"/>
      <nodes>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.q">
    <FragmentSummary>
      <method value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
      <methodtrace value="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="r2.q"/>
      <nodes>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u">
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u">
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u$a">
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u$a">
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.t">
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.t: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.t"/>
      <nodes>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="g3.g">
    <FragmentSummary>
      <method value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
      <methodtrace value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="g3.g"/>
      <nodes>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
      <methodtrace value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="g3.g"/>
      <nodes>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
      <methodtrace value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="g3.g"/>
      <nodes>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
      <methodtrace value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="g3.g"/>
      <nodes>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
      <methodtrace value="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="g3.g"/>
      <nodes>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void N1(java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$j">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$j">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;,&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: java.lang.Object g(java.lang.Object,java.lang.Object,java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$j: void a(java.lang.String,java.lang.String,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void Z0(com.simplemobiletools.draw.pro.activities.MainActivity,java.lang.String)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void L1(java.lang.String)&gt;"/>
        <node method="&lt;g3.g: void i(b3.p,java.lang.String,com.simplemobiletools.draw.pro.views.MyCanvas)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u$a">
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
      <methodtrace value="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.u$a">
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,void y(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;,&lt;t2.t: void onClick(android.view.View)&gt;,&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;,&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;,&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;,&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;,&lt;u2.b: void run()&gt;,&lt;u2.g: void a(r2.q,java.lang.String)&gt;,&lt;u2.g: void y(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.u"/>
      <nodes>
        <node method="&lt;t2.u$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.u$a: void c(androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.t: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void a(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u$a: void d(android.view.View,t2.u,androidx.appcompat.app.b,android.view.View)&gt;"/>
        <node method="&lt;t2.u: void a(t2.u,java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;t2.u: void c(java.lang.String,androidx.appcompat.app.b)&gt;"/>
        <node method="&lt;r2.q: boolean d0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean x(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.b: void run()&gt;"/>
        <node method="&lt;u2.g: void a(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void y(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$e">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$e">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$e: void a(boolean)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void j1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$n">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity$n">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: java.lang.Object b()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity$n: void a()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void a1(com.simplemobiletools.draw.pro.activities.MainActivity)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void M1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$g$a">
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0$g$a">
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
      <methodtrace value="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;,&lt;t2.c0$g$a: void c(java.util.List)&gt;,&lt;t2.d0: void run()&gt;,&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;,&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;,&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;,&lt;t2.c0: void M(java.util.ArrayList)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0$g$a: java.lang.Object j(java.lang.Object)&gt;"/>
        <node method="&lt;t2.c0$g$a: void c(java.util.List)&gt;"/>
        <node method="&lt;t2.d0: void run()&gt;"/>
        <node method="&lt;t2.c0$g$a: void a(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0$g$a: void d(t2.c0,java.util.List)&gt;"/>
        <node method="&lt;t2.c0: void o(t2.c0,java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void M(java.util.ArrayList)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="h1.p">
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;"/>
      <methodtrace value="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="h1.p"/>
      <nodes>
        <node method="&lt;h1.p: com.bumptech.glide.j g(androidx.fragment.app.e)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c1">
    <FragmentSummary>
      <method value="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c1"/>
      <nodes>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c1"/>
      <nodes>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
      <methodtrace value="&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c1"/>
      <nodes>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.e1">
    <FragmentSummary>
      <method value="&lt;t2.e1: void k()&gt;"/>
      <methodtrace value="&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void k()&gt;"/>
      <methodtrace value="&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void k()&gt;"/>
      <methodtrace value="&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.e1">
    <FragmentSummary>
      <method value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
      <methodtrace value="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.e1"/>
      <nodes>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.commons.activities.ContributorsActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.ContributorsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.ContributorsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.ContributorsActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.ContributorsActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.activities.MainActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.activities.MainActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="b3.h">
    <FragmentSummary>
      <method value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;,&lt;u2.c: void run()&gt;,&lt;u2.g: void b(r2.q,java.lang.String)&gt;,&lt;u2.g: void A(r2.q,java.lang.String)&gt;,void A(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="b3.h"/>
      <nodes>
        <node method="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean z(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.c: void run()&gt;"/>
        <node method="&lt;u2.g: void b(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void A(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;,&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;,&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;,&lt;u2.g: void Q(r2.q,java.lang.String)&gt;,&lt;u2.e: void run()&gt;,&lt;u2.g: void e(r2.q,java.lang.String)&gt;,&lt;u2.g: void R(r2.q,java.lang.String)&gt;,void R(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="b3.h"/>
      <nodes>
        <node method="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void T1()&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void v1(android.graphics.Bitmap,s3.l)&gt;"/>
        <node method="&lt;u2.g: void m(r2.q,x2.b,boolean,s3.l)&gt;"/>
        <node method="&lt;r2.q: boolean e0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean w(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void Q(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.e: void run()&gt;"/>
        <node method="&lt;u2.g: void e(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void R(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="b3.h"/>
      <nodes>
        <node method="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,void C(r2.q,java.lang.String), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="b3.h"/>
      <nodes>
        <node method="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
      <methodtrace value="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;,&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;,&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;,&lt;c3.a: void onClick(android.view.View)&gt;,&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;,&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;,&lt;t2.y: void onClick(android.view.View)&gt;,&lt;t2.c0: void b(t2.c0,android.view.View)&gt;,&lt;t2.c0: void h(t2.c0,android.view.View)&gt;,&lt;t2.c0: void N()&gt;,&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;,&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;,&lt;u2.f: void run()&gt;,&lt;u2.g: void f(r2.q,java.lang.String)&gt;,&lt;u2.g: void C(r2.q,java.lang.String)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="b3.h"/>
      <nodes>
        <node method="&lt;b3.h: boolean onMenuItemClick(android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean R0(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: boolean S1(com.simplemobiletools.draw.pro.activities.MainActivity,android.view.MenuItem)&gt;"/>
        <node method="&lt;com.simplemobiletools.draw.pro.activities.MainActivity: void W1()&gt;"/>
        <node method="&lt;c3.c: void &lt;init&gt;(b3.p,java.lang.String,java.lang.String,java.lang.String,boolean,s3.q)&gt;"/>
        <node method="&lt;c3.a: void onClick(android.view.View)&gt;"/>
        <node method="&lt;c3.c: void a(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;c3.c: void e(c3.c,t3.r,android.view.View,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l,int,t3.g)&gt;"/>
        <node method="&lt;t2.c0: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.y: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void b(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void h(t2.c0,android.view.View)&gt;"/>
        <node method="&lt;t2.c0: void N()&gt;"/>
        <node method="&lt;r2.q: boolean f0(java.lang.String,s3.l)&gt;"/>
        <node method="&lt;u2.g: boolean B(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.f: void run()&gt;"/>
        <node method="&lt;u2.g: void f(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;u2.g: void C(r2.q,java.lang.String)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.bumptech.glide.b">
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.bumptech.glide.b"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
      <methodtrace value="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.bumptech.glide.b"/>
      <nodes>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.commons.activities.FAQActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.FAQActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.FAQActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.FAQActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.FAQActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.draw.pro.views.MyCanvas$b">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="com.simplemobiletools.draw.pro.views.MyCanvas"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="com.simplemobiletools.draw.pro.views.MyCanvas"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.draw.pro.views.MyCanvas$b: void c()&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j u(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j f(android.content.Context)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="t2.c0">
    <FragmentSummary>
      <method value="&lt;t2.c0: void a(int)&gt;"/>
      <methodtrace value="&lt;t2.c0: void a(int)&gt;,&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,void b0(s3.l), &lt;t2.n1: void &lt;init&gt;(android.app.Activity,t2.n1$b,s3.a)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void a(int)&gt;"/>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="p e" type="ReceiveFromRetValue" unit="$r6 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="Activity getFragmentManager" type="CreateMethod" unit="retFragMan = new android.app.FragmentManager"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void a(int)&gt;"/>
      <methodtrace value="&lt;t2.c0: void a(int)&gt;,&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;,&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;,com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean), &lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void a(int)&gt;"/>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;com.bumptech.glide.b: com.bumptech.glide.j t(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j d(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)&gt;"/>
        <node method="p d" type="ReceiveFromParatMethod" unit="$r3 := @parameter1: android.app.FragmentManager"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;t2.c0: void a(int)&gt;"/>
      <methodtrace value="&lt;t2.c0: void a(int)&gt;,&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;,&lt;t2.e1: void k()&gt;,&lt;t2.c1: void onClick(android.view.View)&gt;,&lt;t2.e1: void c(t2.e1,android.view.View)&gt;,&lt;t2.e1: void n(t2.e1,android.view.View)&gt;,&lt;t2.e1: void q()&gt;,&lt;r2.q: void b0(s3.l)&gt;,&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;,&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;,h1.o j(android.app.FragmentManager,android.app.Fragment)"/>
      <source name="t2.c0"/>
      <nodes>
        <node method="&lt;t2.c0: void a(int)&gt;"/>
        <node method="&lt;t2.e1: void &lt;init&gt;(r2.q,java.lang.String,boolean,boolean,s3.l)&gt;"/>
        <node method="&lt;t2.e1: void k()&gt;"/>
        <node method="&lt;t2.c1: void onClick(android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void c(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void n(t2.e1,android.view.View)&gt;"/>
        <node method="&lt;t2.e1: void q()&gt;"/>
        <node method="&lt;r2.q: void b0(s3.l)&gt;"/>
        <node method="&lt;h1.p: com.bumptech.glide.j e(android.app.Activity)&gt;"/>
        <node method="&lt;h1.p: h1.o j(android.app.FragmentManager,android.app.Fragment)&gt;"/>
        <node method="p j" type="ReceiveFromParatMethod" unit="$r1 := @parameter0: android.app.FragmentManager"/>
        <node method="p j" type="beginTransaction" unit="$r7 = virtualinvoke $r1.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="p j" type="addFunction" unit="$r7 = virtualinvoke $r7.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r5, &quot;com.bumptech.glide.manager&quot;)"/>
        <node method="p j" type="commit" unit="virtualinvoke $r7.&lt;android.app.FragmentTransaction: int commitAllowingStateLoss()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.commons.activities.AboutActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.AboutActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.AboutActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.AboutActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.AboutActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.commons.activities.LicenseActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.LicenseActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.LicenseActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.LicenseActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.LicenseActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="com.simplemobiletools.commons.activities.CustomizationActivity">
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.CustomizationActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.CustomizationActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;,&lt;r2.q: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="com.simplemobiletools.commons.activities.CustomizationActivity"/>
      <nodes>
        <node method="&lt;com.simplemobiletools.commons.activities.CustomizationActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;r2.q: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
  <Component source="r2.r">
    <FragmentSummary>
      <method value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.r"/>
      <nodes>
        <node method="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.r"/>
      <nodes>
        <node method="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.core.app.f: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
    <FragmentSummary>
      <method value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
      <methodtrace value="&lt;r2.r: void onCreate(android.os.Bundle)&gt;,&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;,&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;,void onCreate(android.os.Bundle), &lt;androidx.lifecycle.w: void g(android.app.Activity)&gt;"/>
      <source name="r2.r"/>
      <nodes>
        <node method="&lt;r2.r: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.fragment.app.e: void onCreate(android.os.Bundle)&gt;"/>
        <node method="&lt;androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)&gt;"/>
        <node method="w g" type="ReceiveFromRetValue" unit="$r2 = virtualinvoke $r1.&lt;android.app.Activity: android.app.FragmentManager getFragmentManager()&gt;()"/>
        <node method="w g" type="beginTransaction" unit="$r4 = virtualinvoke $r2.&lt;android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()&gt;()"/>
        <node method="w g" type="addFunction" unit="$r4 = virtualinvoke $r4.&lt;android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)&gt;($r0, &quot;androidx.lifecycle.LifecycleDispatcher.report_fragment_tag&quot;)"/>
        <node method="w g" type="commit" unit="virtualinvoke $r4.&lt;android.app.FragmentTransaction: int commit()&gt;()"/>
      </nodes>
    </FragmentSummary>
  </Component>
</root>
